{
    "name": "Dev Container Definition Template - Dockerfile",
    // Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
    "build": {
        "dockerfile": "Dockerfile",
        // [Optional] You can use build args to set options. e.g. 'VARIANT' below affects the image in the Dockerfile
        "args": {
            "VARIANT": "3.6"
        }
    },
    // Set *default* container specific settings.json values on container create.
    // "settings": {
    //     "terminal.integrated.shell.linux": null
    // },
    // Add the IDs of extensions you want installed when the container is created.
    // "extensions": []
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],
    // Use 'postCreateCommand' to run commands after the container is created.
    // "postCreateCommand": "uname -a",
    // Uncomment to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
    // "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
    // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
    // "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
    // Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
    // "remoteUser": "vscode"
    "settings": {
        "terminal.integrated.shell.linux": "/bin/zsh",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.linting.flake8Path": "/root/.local/bin/flake8",
        "python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
        "python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
        "python.linting.pylintPath": "/root/.local/bin/pylint",
        "python.testing.pytestPath": "/root/.local/bin/pytest"
    },
    "extensions": [
        "ms-python.python",
        "vscoss.vscode-ansible",
        "timonwong.ansible-autocomplete",
        "codezombiech.gitignore",
        "tuxtina.json2yaml",
        "jebbs.markdown-extended",
        "donjayamanne.python-extension-pack",
        "njpwerner.autodocstring",
        "quicktype.quicktype",
        "jack89ita.copy-filename",
        "mhutchie.git-graph",
        "eamodio.gitlens",
        "yzhang.markdown-all-in-one",
        "davidanson.vscode-markdownlint",
        "christian-kohler.path-intellisense",
        "ms-python.vscode-pylance",
        "tht13.python"
    ],
    "containerEnv": {
        "ANSIBLE_CONFIG": "./ansible.cfg"
    }
}